name: Runs the tests

on:
  push:
    branches:
      - proto-without-grpc
      - fix-windows-tests

jobs:
  build-polypheny:
    timeout-minutes: 15
    runs-on: windows-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout Polypheny
        uses: actions/checkout@v4
        with:
          repository: polypheny/Polypheny-DB
          ref: proto-without-grpc

      - name: Build Polypheny
        run: |
          ./gradlew build -x test -x licensee

      - name: Build Polypheny
        run: |
          ./gradlew build -x test -x licensee

      - name: Store Polypheny JAR
        uses: actions/upload-artifact@v4
        with:
          name: polypheny-jar
          path: dbms/build/libs/dbms-0.10.0-SNAPSHOT.jar

  test-system-python:
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        version: ['3.12'] # TODO: When dropping 3.8, adjust type hints for polypheny.connect
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build-polypheny
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout Polypheny-Prism-API
        uses: actions/checkout@v4
        with:
          repository: polypheny/Polypheny-Prism-API
          path: Polypheny-Prism-API

      - name: Checkout driver
        uses: actions/checkout@v4
        with:
          path: main

      - name: Download protobuf for Linux
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v26.0/protoc-26.0-linux-x86_64.zip
          unzip protoc-26.0-linux-x86_64.zip
        working-directory: Polypheny-Prism-API

      - name: Build Protobuf Files
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: bin/protoc -I proto --experimental_allow_proto3_optional --python_out . proto/polyprism/*.proto
        working-directory: Polypheny-Prism-API

      - name: Download protobuf for Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v26.0/protoc-26.0-win64.zip
          unzip protoc-26.0-win64.zip
        working-directory: Polypheny-Prism-API

      - name: Build Protobuf Files
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: bin/protoc.exe -I proto --experimental_allow_proto3_optional --python_out . proto/polyprism/*.proto
        working-directory: Polypheny-Prism-API

      - name: Download protobuf for macOS
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v26.0/protoc-26.0-osx-universal_binary.zip
          unzip protoc-26.0-osx-universal_binary.zip
        working-directory: Polypheny-Prism-API

      - name: Build Protobuf Files
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: bin/protoc -I proto --experimental_allow_proto3_optional --python_out . proto/polyprism/*.proto
        working-directory: Polypheny-Prism-API

      - name: Install Protobuf Package
        run: pip install .
        working-directory: Polypheny-Prism-API

      - name: Install driver dependencies
        run: pip install -r requirements.txt
        working-directory: main

      - name: Load Polypheny JAR
        uses: actions/download-artifact@v4
        with:
          name: polypheny-jar
          path: main

      - name: Run tests
        run: pytest --doctest-modules -v
        env:
          POLYPHENY_JAR: dbms-0.10.0-SNAPSHOT.jar
        working-directory: main

      - name: Install locally
        run: pip install .
        working-directory: main

      - name: Run tests in docs
        run: make doctest
        env:
          POLYPHENY_JAR: ../dbms-0.10.0-SNAPSHOT.jar
        working-directory: main/docs
